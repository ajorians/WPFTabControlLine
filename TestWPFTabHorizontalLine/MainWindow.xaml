<Window x:Class="TestWPFTabHorizontalLine.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:Interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestWPFTabHorizontalLine"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Background="#212E3B"
        Title="MainWindow" Height="550" Width="800">
   <Window.Resources>
      <ResourceDictionary>
         <local:BoolToVisibilityConverter x:Key="BoolToVisibleConverter"
                                                                TrueValue="Visible"
                                                                FalseValue="Collapsed" />
         <local:BoolToVisibilityConverter x:Key="InverseBoolToVisibleConverter"
                                          TrueValue="Collapsed"
                                          FalseValue="Visible" />
         <Color x:Key="TextColor">#D8DEE3</Color>
      <Color x:Key="TextBrightColor">#FFFFFF</Color>
      <Color x:Key="PrimaryButtonTextColor">#ffffff</Color>
      <Color x:Key="ControlDarkColor">#2a3137</Color>
      <Color x:Key="ControlColor">#363E45</Color>
      <Color x:Key="ControlBrightColor">#444F54</Color>
      <Color x:Key="ControlBrightestColor">#4C5E62</Color>
      <Color x:Key="ControlOutlineColor">#4a555e</Color>
      <Color x:Key="MainPanelColor">#23282f</Color>
      <Color x:Key="DarkPanelColor">#161b1d</Color>
      <Color x:Key="RecordColor">#D64040</Color>
      <Color x:Key="CamtasiaColor">#528400</Color>
      <Color x:Key="CamtasiaDarkColor">#4D7A04</Color>
      <Color x:Key="CamtasiaBrightColor">#5D9600</Color>
      <Color x:Key="SnagitColor">#2C7CB2</Color>
      <Color x:Key="SnagitDarkColor">#2973A6</Color>
      <Color x:Key="SnagitBrightColor">#3189C4</Color>
      <Color x:Key="InputPrimaryColor">#161b1d</Color>
      <Color x:Key="InputSecondaryColor">#444F54</Color>
      <Color x:Key="InputTertairyColor">#D8DEE3</Color>
      <Color x:Key="SeparatorColor">#363E45</Color>

      <SolidColorBrush x:Key="TextBrush"
                       Color="{StaticResource TextColor}" />
      <SolidColorBrush x:Key="TextBrightBrush"
                       Color="{StaticResource TextBrightColor}" />
      <SolidColorBrush x:Key="ControlDarkBrush"
                       Color="{StaticResource ControlDarkColor}" />
      <SolidColorBrush x:Key="ControlBrush"
                       Color="{StaticResource ControlColor}" />
      <SolidColorBrush x:Key="ControlBrightBrush"
                       Color="{StaticResource ControlBrightColor}" />
      <SolidColorBrush x:Key="ControlBrightestBrush"
                       Color="{StaticResource ControlBrightestColor}" />
      <SolidColorBrush x:Key="ControlOutlineBrush"
                       Color="{StaticResource ControlOutlineColor}" />
      <SolidColorBrush x:Key="MainPanelBrush"
                       Color="{StaticResource MainPanelColor}" />
      <SolidColorBrush x:Key="DarkPanelBrush"
                       Color="{StaticResource DarkPanelColor}" />
      <SolidColorBrush x:Key="RecordBrush"
                       Color="{StaticResource RecordColor}" />
      <SolidColorBrush x:Key="CamtasiaBrush"
                       Color="{StaticResource CamtasiaColor}" />
      <SolidColorBrush x:Key="CamtasiaDarkBrush"
                       Color="{StaticResource CamtasiaDarkColor}" />
      <SolidColorBrush x:Key="CamtasiaBrightBrush"
                       Color="{StaticResource CamtasiaBrightColor}" />
      <SolidColorBrush x:Key="SnagitBrush"
                       Color="{StaticResource SnagitColor}" />
      <SolidColorBrush x:Key="SnagitDarkBrush"
                       Color="{StaticResource SnagitDarkColor}" />
      <SolidColorBrush x:Key="SnagitBrightBrush"
                       Color="{StaticResource SnagitBrightColor}" />
      <SolidColorBrush x:Key="InputPrimaryBrush"
                       Color="{StaticResource InputPrimaryColor}" />
      <SolidColorBrush x:Key="InputSecondaryBrush"
                       Color="{StaticResource InputSecondaryColor}" />
      <SolidColorBrush x:Key="InputTertairyBrush"
                       Color="{StaticResource InputTertairyColor}" />
      <SolidColorBrush x:Key="PrimaryButtonTextBrush"
                       Color="{StaticResource PrimaryButtonTextColor}" />
      <SolidColorBrush x:Key="SeparatorBrush"
                       Color="{StaticResource SeparatorColor}" />

      <sys:Double x:Key="DarkShadowOpacity">0.60</sys:Double>
      <sys:Double x:Key="MidShadowOpacity">0.45</sys:Double>
      <sys:Double x:Key="LightShadowOpacity">0.14</sys:Double>

      <sys:Double x:Key="FullToolOpacity">0.90</sys:Double>
      <sys:Double x:Key="MidToolOpacity">0.70</sys:Double>
      <sys:Double x:Key="LightToolOpacity">0.40</sys:Double>

         <Style x:Key="RepeatButtonTransparent"
                TargetType="RepeatButton">
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                     <Rectangle Fill="Transparent" />
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
            <Setter Property="Focusable"
                    Value="False" />
         </Style>
         <SolidColorBrush x:Key="SemiTransparentControlBrush"
                          Opacity=".35"
                          Color="{DynamicResource TextColor}" />

         <Style x:Key="ScrollBarThumb"
                TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Thumb}">
                     <Border CornerRadius="0"
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                             VerticalAlignment="{TemplateBinding VerticalAlignment}"
                             Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}" />
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <Style x:Key="FlatVerticalScrollBarStyle"
                TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Width"
                    Value="10" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="Margin"
                    Value="2" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate>
                     <Grid Background="Transparent"
                           HorizontalAlignment="Stretch">
                        <Rectangle x:Name="background"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="true">
                           <Track.DecreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                            Style="{StaticResource RepeatButtonTransparent}" />
                           </Track.DecreaseRepeatButton>
                           <Track.IncreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                            Style="{StaticResource RepeatButtonTransparent}" />
                           </Track.IncreaseRepeatButton>
                           <Track.Thumb>
                              <Thumb x:Name="thumb"
                                     Style="{StaticResource ScrollBarThumb}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Background="{TemplateBinding Background}"
                                     Width="4"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Stretch" />
                           </Track.Thumb>
                        </Track>
                     </Grid>
                     <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                           <Setter TargetName="thumb"
                                   Property="Width"
                                   Value="10" />
                           <Setter Property="Opacity"
                                   TargetName="background"
                                   Value="0.5" />
                        </Trigger>
                     </ControlTemplate.Triggers>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <Style x:Key="FlatHorizontalScrollBarStyle"
                TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Width"
                    Value="Auto" />
            <Setter Property="Height"
                    Value="10" />
            <Setter Property="Margin"
                    Value="2" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate>
                     <Grid Background="Transparent"
                           VerticalAlignment="Stretch">
                        <Rectangle x:Name="background"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="False">
                           <Track.DecreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                            Style="{StaticResource RepeatButtonTransparent}" />
                           </Track.DecreaseRepeatButton>
                           <Track.IncreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                            Style="{StaticResource RepeatButtonTransparent}" />
                           </Track.IncreaseRepeatButton>
                           <Track.Thumb>
                              <Thumb x:Name="thumb"
                                     Style="{StaticResource ScrollBarThumb}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Background="{TemplateBinding Background}"
                                     Height="4"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Bottom" />
                           </Track.Thumb>
                        </Track>
                     </Grid>
                     <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                           <Setter TargetName="thumb"
                                   Property="Height"
                                   Value="10" />
                           <Setter Property="Opacity"
                                   TargetName="background"
                                   Value="0.5" />
                        </Trigger>
                     </ControlTemplate.Triggers>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <Style x:Key="FlatScrollViewerStyle"
                TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource SemiTransparentControlBrush}" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                           <RowDefinition />
                           <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                           <ScrollContentPresenter HorizontalAlignment="Stretch"
                                                   CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Grid.RowSpan="2"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   HorizontalAlignment="Right"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Style="{StaticResource FlatVerticalScrollBarStyle}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Orientation="Horizontal"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   VerticalAlignment="Bottom"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Style="{StaticResource FlatHorizontalScrollBarStyle}" />
                     </Grid>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <Style x:Key="FlatScrollViewerStyleWithOverlappingScrollBars"
                TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource SemiTransparentControlBrush}" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                     <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                           <ScrollContentPresenter HorizontalAlignment="Stretch"
                                                   CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Stretch"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Style="{StaticResource FlatVerticalScrollBarStyle}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   VerticalAlignment="Bottom"
                                   HorizontalAlignment="Stretch"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Style="{StaticResource FlatHorizontalScrollBarStyle}" />
                     </Grid>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <!-- Applies exactly the same styling to scrollbars as the regular FlatScrollViewerStyleWithOverlappingScrollBars, but within a datagrid-specific template structure -->
         <Style x:Key="DataGridFlatScrollViewerStyleWithOverlappingScrollBars"
                TargetType="{x:Type ScrollViewer}">
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource SemiTransparentControlBrush}" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="Auto" />
                           <ColumnDefinition Width="*" />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                           <RowDefinition Height="Auto" />
                           <RowDefinition Height="*" />
                           <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                        Grid.Column="1"
                                                        Visibility="{Binding HeadersVisibility, 
                                                                                 Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                                 ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.ColumnSpan="2"
                                                Grid.Row="1"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="2"
                                   Grid.Row="1"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Stretch"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Style="{StaticResource FlatVerticalScrollBarStyle}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, 
                                                       RelativeSource={RelativeSource TemplatedParent}}" />

                        <Grid Grid.Column="1"
                              Grid.Row="2">
                           <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                              <ColumnDefinition Width="*" />
                           </Grid.ColumnDefinitions>

                           <ScrollBar x:Name="PART_HorizontalScrollBar"
                                      Grid.Column="1"
                                      Orientation="Horizontal"
                                      ViewportSize="{TemplateBinding ViewportWidth}"
                                      Maximum="{TemplateBinding ScrollableWidth}"
                                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                      VerticalAlignment="Bottom"
                                      HorizontalAlignment="Stretch"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Style="{StaticResource FlatHorizontalScrollBarStyle}"
                                      Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                           RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                     </Grid>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
         <Style x:Key="FlatTabControlStyleTools"
             TargetType="{x:Type local:CustomTabControl}">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type local:CustomTabControl}">
                  <Grid KeyboardNavigation.TabNavigation="Local">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                     <!--<i:Interaction.Behaviors>
                        <themes:ThemableVisualStateBehavior />
                     </i:Interaction.Behaviors>-->
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Disabled">
                              <Storyboard>
                                 <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                               Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FFAAAAAA" />
                                 </ColorAnimationUsingKeyFrames>
                                 <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                Storyboard.TargetName="HeaderPanel">
                                    <EasingDoubleKeyFrame KeyTime="0"
                                                          Value="0.5" />
                                 </DoubleAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Normal" />
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                     <TabPanel x:Name="HeaderPanel"
                               Visibility="{TemplateBinding TabHeadersVisibility}"
                               Grid.Row="0"
                               Panel.ZIndex="1"
                               IsItemsHost="True"
                               KeyboardNavigation.TabIndex="1"
                               Background="Transparent"
                               Margin="0" />
                        <Line Grid.Row="1"
                              Stroke="{TemplateBinding TabHeaderlineBrush}"
                              X1="0"
                              X2="{TemplateBinding ActualWidth}"
                              Margin="0,-1,0,0"
                              Visibility="{TemplateBinding TabHeadersLineVisibility}" />
                        <Border x:Name="Border"
                             Grid.Row="2"
                             BorderThickness="0"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             CornerRadius="2"
                             KeyboardNavigation.TabNavigation="Local"
                             KeyboardNavigation.DirectionalNavigation="Contained"
                             KeyboardNavigation.TabIndex="2">
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" />
                     </Border>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="CamtasiaHomeRecentTabItemStyle"
             TargetType="TabItem">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="TabItem">
                  <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Height="35">
                     <TextBlock Foreground="{StaticResource TextBrightBrush}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                TextAlignment="Left"
                                FontSize="19"
                                Margin="10,0"
                                Text="{Binding Title}" />
                  </Border>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
         <Setter Property="Background"
                 Value="Transparent" />
         <Setter Property="Foreground"
                 Value="{StaticResource TextBrightBrush}" />
         <Setter Property="FocusVisualStyle"
                 Value="{x:Null}" />
         <Setter Property="BorderThickness"
                 Value="0,0,0,2" />
         <Setter Property="BorderBrush"
                 Value="Transparent" />
         <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
               <Setter Property="BorderThickness"
                       Value="0,0,0,2" />
               <Setter Property="BorderBrush"
                          Value="#98C92D" />
               <Setter Property="FontWeight"
                       Value="SemiBold" />
            </Trigger>
         </Style.Triggers>
      </Style>

         <ControlTemplate x:Key="BigPrimaryButtonTemplate"
                          TargetType="Button">
            <Grid x:Name="rootGrid"
                  UseLayoutRounding="True"
                  MinHeight="{TemplateBinding MinHeight}">
               <Grid.Effect>
                  <DropShadowEffect ShadowDepth="1"
                                    Direction="270"
                                    BlurRadius="4"
                                    Opacity="{DynamicResource LightShadowOpacity}" />
               </Grid.Effect>
               <!--<i:Interaction.Behaviors>
                  <WPFCommonControlsThemes:ThemableVisualStateBehavior />
               </i:Interaction.Behaviors>-->
               <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                     <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2">
                           <VisualTransition.GeneratedEasingFunction>
                              <ExponentialEase EasingMode="EaseOut"
                                               Exponent="4" />
                           </VisualTransition.GeneratedEasingFunction>
                        </VisualTransition>
                     </VisualStateGroup.Transitions>
                     <VisualState x:Name="Normal" />
                     <VisualState x:Name="MouseOver">
                        <Storyboard>
                           <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                         Storyboard.TargetName="backgroundRectangle">
                              <EasingColorKeyFrame KeyTime="0"
                                                   Value="{DynamicResource CamtasiaBrightColor}" />
                           </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                     </VisualState>
                     <VisualState x:Name="Pressed">
                        <Storyboard>
                           <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                         Storyboard.TargetName="backgroundRectangle">
                              <EasingColorKeyFrame KeyTime="0"
                                                   Value="{DynamicResource CamtasiaDarkColor}" />
                           </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                     </VisualState>
                     <VisualState x:Name="Disabled">
                        <Storyboard>
                           <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                          Storyboard.TargetName="rootGrid">
                              <EasingDoubleKeyFrame KeyTime="0"
                                                    Value="0.6" />
                           </DoubleAnimationUsingKeyFrames>
                           <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                          Storyboard.TargetName="buttonContent">
                              <EasingDoubleKeyFrame KeyTime="0"
                                                    Value="0.5" />
                           </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                     </VisualState>
                  </VisualStateGroup>
               </VisualStateManager.VisualStateGroups>
               <Rectangle x:Name="backgroundRectangle"
                          HorizontalAlignment="Stretch"
                          Height="Auto"
                          VerticalAlignment="Stretch"
                          RadiusX="3"
                          RadiusY="3"
                          Fill="{DynamicResource CamtasiaBrush}" />
               <ContentPresenter x:Name="buttonContent"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Height="Auto"
                                 Margin="{TemplateBinding Padding}"
                                 TextBlock.Foreground="{DynamicResource TextBrightBrush}"
                                 TextBlock.FontSize="{TemplateBinding FontSize}"
                                 TextBlock.FontWeight="Medium" />
            </Grid>
         </ControlTemplate>
      </ResourceDictionary>
   </Window.Resources>
    <Grid>
      <Border Grid.Row="6"
              CornerRadius="8"
              Background="#14FFFFFF"
              Margin="0">
         <local:CustomTabControl x:Name="projectCollectionTabControl"
                                             Margin="18,10,0,0"
                                             ItemsSource="{Binding RecentContentViewModel.ProjectCollections}"
                                             ItemContainerStyle="{StaticResource CamtasiaHomeRecentTabItemStyle}"
                                             SelectedIndex="{Binding RecentContentViewModel.SelectedCollectionIndex}"
                                             Style="{StaticResource FlatTabControlStyleTools}"
                                 TabHeadersLineVisibility="Visible"
                                 TabHeaderlineBrush="#425357"
                                 Width="500"
                                 Height="275"><!--Setting Width isn't required; but makes it so I can see it contained-->
            <local:CustomTabControl.ContentTemplate>
               <DataTemplate>
                  <Grid>
                     <StackPanel HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Visibility="{Binding FilePathDataAvailable, Converter={StaticResource InverseBoolToVisibleConverter}}">
                        <TextBlock FontStyle="Italic"
                                   FontSize="20"
                                   Foreground="{StaticResource TextBrush}"
                                   HorizontalAlignment="Center"
                                   Text="{Binding NoDataEntriesMessage}" />
                        <Button Template="{StaticResource BigPrimaryButtonTemplate}"
                                FontSize="20"
                                Height="40"
                                Margin="0 25 0 0"
                                Padding="100 0"
                                Content="Create New Project" />
                     </StackPanel>
                     <ListView Grid.Row="0"
                               ItemsSource="{Binding FilePathDataCollection}"
                               Background="Transparent"
                               SelectionMode="Single"
                               Foreground="{StaticResource TextBrightBrush}"
                               Visibility="{Binding FilePathDataAvailable, Converter={StaticResource BoolToVisibleConverter}}"
                               SelectedItem="{Binding SelectedFilePathData}"
                               AutomationProperties.AutomationId="t-Home-CollectionListView">
                        <ListView.Template>
                           <ControlTemplate TargetType="ListView">
                              <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                            HorizontalScrollBarVisibility="Auto"
                                            UseLayoutRounding="True"
                                            HorizontalAlignment="Left"
                                            Style="{StaticResource FlatScrollViewerStyleWithOverlappingScrollBars}">
                                 <ItemsPresenter Margin="2,0,0,15" />
                                 <!--<Interactivity:Interaction.Behaviors>
                                    <WPFCommonFilesAttachedBehaviors:ScrollHorizontallyWithMouseWheelBehavior />
                                 </Interactivity:Interaction.Behaviors>-->
                              </ScrollViewer>
                           </ControlTemplate>
                        </ListView.Template>
                        <ListView.ItemsPanel>
                           <ItemsPanelTemplate>
                              <WrapPanel Orientation="Horizontal" />
                           </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                           <Style TargetType="{x:Type ListViewItem}">
                              <Setter Property="OverridesDefaultStyle"
                                      Value="True" />
                              <Setter Property="Padding"
                                      Value="0" />
                              <Setter Property="Template">
                                 <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                       <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </ControlTemplate>
                                 </Setter.Value>
                              </Setter>
                           </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                           <DataTemplate>
                              <ContentControl>
                                 <Border CornerRadius="8"
                                         Margin="0,5,10,5">
                                    <Border.Style>
                                       <Style TargetType="Border">
                                          <Setter Property="Background"
                                                  Value="Transparent" />
                                          <Style.Triggers>
                                             <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                   <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                              Value="True" />
                                                   <Condition Binding="{Binding IsSelected}"
                                                              Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                   <Setter Property="Background"
                                                           Value="{DynamicResource HoverHighlightBrush}" />
                                                </MultiDataTrigger.Setters>
                                             </MultiDataTrigger>
                                             <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                   <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                              Value="True" />
                                                   <Condition Binding="{Binding IsSelected}"
                                                              Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                   <Setter Property="Background"
                                                           Value="{DynamicResource HoverHighlightBrush}" />
                                                </MultiDataTrigger.Setters>
                                             </MultiDataTrigger>
                                             <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                   <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                              Value="False" />
                                                   <Condition Binding="{Binding IsSelected}"
                                                              Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                   <Setter Property="Background"
                                                           Value="{StaticResource ControlBrush}" />
                                                </MultiDataTrigger.Setters>
                                             </MultiDataTrigger>
                                          </Style.Triggers>
                                       </Style>
                                    </Border.Style>

                                    <Grid Background="Transparent"
                                          Margin="10"
                                          ToolTip="{Binding ToolTip}">
                                       <Grid.RowDefinitions>
                                          <RowDefinition Height="140" />
                                          <!--Thumbnail-->
                                          <RowDefinition Height="65" />
                                          <!--Label & Date/File text-->
                                          <RowDefinition Height="*" />
                                       </Grid.RowDefinitions>
                                       <Image Grid.Row="0"
                                              Stretch="UniformToFill"
                                              VerticalAlignment="Center"
                                              
                                              Width="250"
                                              Height="140">
                                          <Image.Clip>
                                             <RectangleGeometry RadiusX="8"
                                                                RadiusY="8"
                                                                Rect="0,0,250,140" />
                                          </Image.Clip>
                                       </Image>
                                       <Border Grid.Row="0"
                                               BorderBrush="Black"
                                               BorderThickness="1"
                                               Background="Black"
                                               Opacity="0.75"
                                               CornerRadius="7"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Bottom"
                                               Margin="0,0,10,10">
                                          <Label Content="{Binding Duration}"
                                                 Foreground="White"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center" />
                                       </Border>
                                       <StackPanel Grid.Row="1"
                                                   Orientation="Vertical">
                                          <TextBlock Margin="0 10 0 7"
                                                     TextWrapping="Wrap"
                                                     Text="{Binding DisplayName}"
                                                     HorizontalAlignment="Left"
                                                     FontSize="18"
                                                     FontWeight="SemiBold"
                                                     MaxWidth="250"
                                                     MaxHeight="38"
                                                     VerticalAlignment="Center"
                                                     LineStackingStrategy="MaxHeight"
                                                     TextTrimming="CharacterEllipsis">
                                          </TextBlock>
                                          <StackPanel Orientation="Horizontal"
                                                      Grid.Row="2">
                                             <TextBlock FontSize="14"
                                                        FontWeight="SemiBold"
                                                        Foreground="#46FFFFFF">
                                                <TextBlock.Text>
                                                   <MultiBinding  StringFormat="{}{0} - {1}">
                                                      <Binding Path="DateModified" />
                                                      <Binding Path="FileSize" />
                                                   </MultiBinding>
                                                </TextBlock.Text>
                                             </TextBlock>
                                          </StackPanel>
                                       </StackPanel>
                                    </Grid>

                                 </Border>
                              </ContentControl>
                           </DataTemplate>
                        </ListView.ItemTemplate>
                        <!--<Interactivity:Interaction.Triggers>
                           <Interactivity:EventTrigger EventName="MouseDoubleClick">
                              <Interactivity:InvokeCommandAction Command="{Binding DataContext.OpenRecentProjectCommand, ElementName=projectCollectionTabControl, Mode=OneTime}"
                                                                 CommandParameter="{Binding SelectedFilePathData.FullFilePath}" />
                           </Interactivity:EventTrigger>
                        </Interactivity:Interaction.Triggers>-->
                        <!--<Interactivity:Interaction.Behaviors>
                           <WPFCommonControlsAttachedBehaviors:DeselectAllOnEmptyAreaBehavior />
                        </Interactivity:Interaction.Behaviors>-->
                        <!--<ListView.InputBindings>
                           <KeyBinding Key="Enter"
                                       Command="{Binding DataContext.OpenRecentProjectCommand, ElementName=projectCollectionTabControl, Mode=OneTime}"
                                       CommandParameter="{Binding SelectedFilePathData.FullFilePath}" />
                        </ListView.InputBindings>-->
                     </ListView>
                  </Grid>
               </DataTemplate>
            </local:CustomTabControl.ContentTemplate>
         </local:CustomTabControl>
      </Border>
   </Grid>
</Window>
